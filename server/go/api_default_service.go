/*
 * Todo Manager API
 *
 * This is todo manager backend for coding tests.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"github.com/GIT_USER_ID/GIT_REPO_ID/db/queries/tasks"
	"github.com/GIT_USER_ID/GIT_REPO_ID/db/queries/users"
	"github.com/GIT_USER_ID/GIT_REPO_ID/entities/task"
	"github.com/GIT_USER_ID/GIT_REPO_ID/entities/user"
	"log"
	"net/http"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// UsersPost -
func (s *DefaultApiService) UsersPost(ctx context.Context, usersForReq UsersForReq) (ImplResponse, error) {
	log.Printf("UsersPost")
	// TODO - update UsersPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UsersForRes{}) or use other options such as http.Ok ...
	//return Response(200, UsersForRes{}), nil

	res := users.AddUser(user.GetInstance(user.TypeReqUser(usersForReq)))

	return Response(http.StatusOK, res), nil
}

// UsersUserIdDelete -
func (s *DefaultApiService) UsersUserIdDelete(ctx context.Context, userId string) (ImplResponse, error) {
	// TODO - update UsersUserIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UsersForRes{}) or use other options such as http.Ok ...
	//return Response(200, UsersForRes{}), nil

	users.DeleteUser(userId)

	return Response(http.StatusOK, nil), nil
}

// UsersUserIdGet -
func (s *DefaultApiService) UsersUserIdGet(ctx context.Context, userId string) (ImplResponse, error) {
	// TODO - update UsersUserIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UsersForRes{}) or use other options such as http.Ok ...
	//return Response(200, UsersForRes{}), nil

	res := users.GetUser(userId)

	return Response(http.StatusOK, res), nil
}

// UsersUserIdPatch -
func (s *DefaultApiService) UsersUserIdPatch(ctx context.Context, userId string, usersForReq UsersForReq) (ImplResponse, error) {
	// TODO - update UsersUserIdPatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UsersForRes{}) or use other options such as http.Ok ...
	//return Response(200, UsersForRes{}), nil

	res := users.UpdateUser(userId, user.GetInstance(user.TypeReqUser(usersForReq)))

	return Response(http.StatusOK, res), nil
}

// UsersUserIdPost -
func (s *DefaultApiService) UsersUserIdPost(ctx context.Context, userId string, inlineObject InlineObject) (ImplResponse, error) {
	// TODO - update UsersUserIdPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, UsersForRes{}) or use other options such as http.Ok ...
	//return Response(200, UsersForRes{}), nil

	return Response(http.StatusOK, nil), nil
}

// UsersUserIdTasksGet -
func (s *DefaultApiService) UsersUserIdTasksGet(ctx context.Context, userId string) (ImplResponse, error) {
	// TODO - update UsersUserIdTasksGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []TasksForRes{}) or use other options such as http.Ok ...
	//return Response(200, []TasksForRes{}), nil

	res, err := tasks.GetTasks(userId)

	return Response(http.StatusOK, res), err
}

// UsersUserIdTasksPost -
func (s *DefaultApiService) UsersUserIdTasksPost(ctx context.Context, userId string, tasksForReq TasksForReq) (ImplResponse, error) {
	// TODO - update UsersUserIdTasksPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, TasksForRes{}) or use other options such as http.Ok ...
	//return Response(200, TasksForRes{}), nil

	res := tasks.AddTask(task.GetInstance(userId, task.TypeReqTask(tasksForReq)))

	return Response(http.StatusOK, res), nil
}

// UsersUserIdTasksTaskIdDelete -
func (s *DefaultApiService) UsersUserIdTasksTaskIdDelete(ctx context.Context, userId string, taskId string) (ImplResponse, error) {
	// TODO - update UsersUserIdTasksTaskIdDelete with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	tasks.DeleteTask(userId, taskId)

	return Response(http.StatusOK, nil), nil
}

// UsersUserIdTasksTaskIdGet -
func (s *DefaultApiService) UsersUserIdTasksTaskIdGet(ctx context.Context, userId string, taskId string) (ImplResponse, error) {
	// TODO - update UsersUserIdTasksTaskIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, TasksForRes{}) or use other options such as http.Ok ...
	//return Response(200, TasksForRes{}), nil

	res := tasks.GetTask(userId, taskId)

	return Response(http.StatusOK, res), nil
}

// UsersUserIdTasksTaskIdPatch -
func (s *DefaultApiService) UsersUserIdTasksTaskIdPatch(ctx context.Context, userId string, taskId string) (ImplResponse, error) {
	// TODO - update UsersUserIdTasksTaskIdPatch with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, TasksForRes{}) or use other options such as http.Ok ...
	//return Response(200, TasksForRes{}), nil

	return Response(http.StatusOK, nil), nil
}
